//
//  ContactViewController.swift
//  FinacialApp
//
//  Created by Thiago Souza on 17/05/20.
//  Copyright (c) 2020 Thiago Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ContactDisplayLogic: class
{
  func displayInitialData(viewModel: Contact.Load.ViewModel)
}

class ContactViewController: UIViewController, ContactDisplayLogic
{
  var interactor: ContactBusinessLogic?
  var router: (NSObjectProtocol & ContactRoutingLogic & ContactDataPassing)?
  let contactView = ContactView()
  var cells = [CellDN]()

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    
    let viewController = self
    let interactor = ContactInteractor()
    let presenter = ContactPresenter()
    let router = ContactRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
    
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
    
  }
  
  // MARK: View lifecycle
    
  override func loadView() {
    view = contactView
  }
  
  override func viewDidLoad() {
    super.viewDidLoad()
    contactView.tableView.register(ContactCell.self, forCellReuseIdentifier: ContactCell.cellIdentifier)
    contactView.tableView.dataSource = self
    contactView.tableView.delegate = self
    loadInitialData()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func loadInitialData() {
    
    let request = Contact.Load.Request()
    interactor?.doLoadInitialData(request: request)
    
  }
  
  func displayInitialData(viewModel: Contact.Load.ViewModel) {
    
    cells = viewModel.cells
    contactView.tableView.reloadData()
    
  }
    
}

extension ContactViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return cells.count
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: ContactCell.cellIdentifier, for: indexPath) as? ContactCell {
            
            let cellDN = cells[indexPath.row]
            cell.titleLabel.text = cellDN.message
            cell.textLabel?.text = "\(cellDN.id)"
            
            return cell
        } else {
            return UITableViewCell()
        }
    }
}

extension ContactViewController: UITableViewDelegate {}
